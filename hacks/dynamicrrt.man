.TH XScreenSaver 1 "" "X Version 11"
.SH NAME
dynamicrrt - robot motion planning in dynamic environment.
.SH SYNOPSIS
.B dynamicrrt
[\-display \fIhost:display.screen\fP]
[\-visual \fIvisual\fP]
[\-window]
[\-root]
[\-delay \fIinteger\fP]
[\-obstacleradius \fIreal\fP]
[\-robotradius \fIreal\fP]
[\-obstaclespeed \fIreal\fP]
[\-robotspeed \fIreal\fP]
[\-maxtrees \fIinteger\fP]
[\-maxsteps \fIinteger\fP]
[\-obstacles \fIinteger\fP]
[\-goalaction \fIreal\fP]
[\-connectaction \fIreal\fP]
[\-fps]
.SH DESCRIPTION
The program demonstrates a robot motion planning algorithm to find
a path from one point to another avoiding the different obstacles. In
this program, we are using a dynamic RRT (Rapidly exploring Random Tree)
algorithm which will build a tree representing the available actions and
find a way to the goal. It is also dynamic as the robot will avoid moving
obstacles. It will keep several trees resulting from the original tree
after being cut by the obstacles when they move. The robot will try to
go from the top left corner to the top right corner of the screen.

The algorithm works as followed. At each step, if no path have been found,
it will try to do 3 actions. The first one is to try to connect the goal
to the current tree (the one containing the robot). The second action is
to try reconnecting two trees. The last action is to generate a new position
and connect it to the current tree. Then, after moving the robot and the
obstacles, if an obstacle is such that going from one node to another of a
tree is impossible without colliding, then the tree is cut in two pieces,
which cat be reconnected after when the obstacle leaves. Once one of the,
trees contain the position of the robot and the goal, a path to the goal is
computed and the robot starts moving.

When the robot reaches the goal, the simulation is reinitialized and starts
over.
.SH OPTIONS
.TP 8
.B \-visual \fIvisual\fP
Specify which visual to use.  Legal values are the name of a visual class,
or the id number (decimal or hex) of a specific visual.
.TP 8
.B \-window
Draw on a newly-created window.  This is the default.
.TP 8
.B \-root
Draw on the root window.
.TP 8
.B \-delay \fIinteger\fP
Per-frame delay, in microseconds.  Default: 20000 (0.02 seconds.).
.TP 8
.B \-obstacleradius \fIreal\fP
Radius of the circular obstacles in pixels. Default: 40
.TP 8
.B \-robotradius \fIreal\fP
Radius of the robot in pixels. Default: 10
.TP 8
.B \-obstaclespeed \fIreal\fP
Speed of the obstacles in pixels per frame. Default: 6.0
.TP 8
.B \-robotspeed \fIreal\fP
Speed of the robot in pixels per frame. Default: 6.0
.TP 8
.B \-maxtrees \fIinteger\fP
Maximum number of trees to keep. Default: 5
.TP 8
.B \-maxsteps \fIinteger\fP
Maximum number of actions to do per frame. Default: 10
.TP 8
.B \-obstacles \fIinteger\fP
Number of moving obstacles. Default: 5
.TP 8
.B \-goalaction \fIreal\fP
The probability to pick the action "connect to the goal" (between 0 and 1). Default: 0.4
.TP 8
.B \-connectaction \fIreal\fP
The probability to pick the action "connect two trees" (between 0 and 1). Default: 0.4
.TP 8
.B \-fps
Display the current frame rate and CPU load.
.SH ENVIRONMENT
.PP
.TP 8
.B DISPLAY
to get the default host and display number.
.TP 8
.B XENVIRONMENT
to get the name of a resource file that overrides the global resources
stored in the RESOURCE_MANAGER property.
.SH SEE ALSO
.BR X (1),
.BR xscreensaver (1)
.SH COPYRIGHT
Copyright \(co 2015 by Nicolas Porcel.  Permission to use, copy, modify, 
distribute, and sell this software and its documentation for any purpose is 
hereby granted without fee, provided that the above copyright notice appear 
in all copies and that both that copyright notice and this permission notice
appear in supporting documentation.  No representations are made about the 
suitability of this software for any purpose.  It is provided "as is" without
express or implied warranty.
.SH AUTHOR
Nicolas Porcel
